// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace QADoclerHomeworkTiborFarkas
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("DoclerPageTest", Description="\tThis test set verifies all of the 12 requirement", SourceFile="DoclerPageTest.feature", SourceLine=0)]
    public partial class DoclerPageTestFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DoclerPageTest.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DoclerPageTest", "\tThis test set verifies all of the 12 requirement", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void TheTitleShouldBe_UITestingSite_OnSiteSite(string site, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "REQ-UI-01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The Title should be - UI Testing Site - on <Site> site", null, @__tags);
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When(string.Format("I open \"{0}\" site", site), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then("The title should be: UI Testing Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("The Title should be - UI Testing Site - on <Site> site, Form", new string[] {
                "REQ-UI-01"}, SourceLine=10)]
        public virtual void TheTitleShouldBe_UITestingSite_OnSiteSite_Form()
        {
#line 5
this.TheTitleShouldBe_UITestingSite_OnSiteSite("Form", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("The Title should be - UI Testing Site - on <Site> site, Home", new string[] {
                "REQ-UI-01"}, SourceLine=10)]
        public virtual void TheTitleShouldBe_UITestingSite_OnSiteSite_Home()
        {
#line 5
this.TheTitleShouldBe_UITestingSite_OnSiteSite("Home", ((string[])(null)));
#line hidden
        }
        
        public virtual void TheCompanyLogoShouldBeVisibleOnSiteSite(string site, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "REQ-UI-02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The Company Logo should be visible on <Site> site", null, @__tags);
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.When(string.Format("I open \"{0}\" site", site), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.Then("Company logo is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("The Company Logo should be visible on <Site> site, Form", new string[] {
                "REQ-UI-02"}, SourceLine=20)]
        public virtual void TheCompanyLogoShouldBeVisibleOnSiteSite_Form()
        {
#line 15
this.TheCompanyLogoShouldBeVisibleOnSiteSite("Form", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("The Company Logo should be visible on <Site> site, Home", new string[] {
                "REQ-UI-02"}, SourceLine=20)]
        public virtual void TheCompanyLogoShouldBeVisibleOnSiteSite_Home()
        {
#line 15
this.TheCompanyLogoShouldBeVisibleOnSiteSite("Home", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Home button navigates to the Home site and menu item became active", new string[] {
                "REQ-UI-03",
                "REQ-UI-04"}, SourceLine=25)]
        public virtual void HomeButtonNavigatesToTheHomeSiteAndMenuItemBecameActive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Home button navigates to the Home site and menu item became active", null, new string[] {
                        "REQ-UI-03",
                        "REQ-UI-04"});
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When("I open \"Form\" site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("I open \"Home\" site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.Then("The \"Home\" page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.And("The \"Home\" menu item is active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Form button navigates to the Form site and menu item became active", new string[] {
                "REQ-UI-05",
                "REQ-UI-06"}, SourceLine=34)]
        public virtual void FormButtonNavigatesToTheFormSiteAndMenuItemBecameActive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Form button navigates to the Form site and menu item became active", null, new string[] {
                        "REQ-UI-05",
                        "REQ-UI-06"});
#line 35
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 36
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
 testRunner.When("I open \"Form\" site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then("The \"Form\" page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
 testRunner.And("The \"Form\" menu item is active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("When I click on the Error button, I should get a 404 HTTP response code", new string[] {
                "REQ-UI-07"}, SourceLine=41)]
        public virtual void WhenIClickOnTheErrorButtonIShouldGetA404HTTPResponseCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I click on the Error button, I should get a 404 HTTP response code", null, new string[] {
                        "REQ-UI-07"});
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 43
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.When("I open \"Error\" site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("Got 404 HTTP response code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("When I click on the UI Testing button, I should get navigated to the Home page", new string[] {
                "REQ-UI-08"}, SourceLine=47)]
        public virtual void WhenIClickOnTheUITestingButtonIShouldGetNavigatedToTheHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I click on the UI Testing button, I should get navigated to the Home page", null, new string[] {
                        "REQ-UI-08"});
#line 48
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 49
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
 testRunner.When("I open \"Form\" site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.And("I click on the UI Testing button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.Then("The \"Home\" page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Text should be visible in H1 tag at Home page", new string[] {
                "REQ-UI-09"}, SourceLine=54)]
        public virtual void TextShouldBeVisibleInH1TagAtHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Text should be visible in H1 tag at Home page", null, new string[] {
                        "REQ-UI-09"});
#line 55
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 56
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
 testRunner.When("I open \"Home\" site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.Then("\"Welcome to the Docler Holding QA Department\" text visible in \"H1\" tag", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Text should be visible in P tag at Home page", new string[] {
                "REQ-UI-10"}, SourceLine=60)]
        public virtual void TextShouldBeVisibleInPTagAtHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Text should be visible in P tag at Home page", null, new string[] {
                        "REQ-UI-10"});
#line 61
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 62
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 63
 testRunner.When("I open \"Home\" site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.Then("\"This site is dedicated to perform some exercises and demonstrate automated web t" +
                    "esting.\" text visible in \"p\" tag", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("On the Form page, a form should be visible with one input box and one submit butt" +
            "on", new string[] {
                "REQ-UI-11"}, SourceLine=66)]
        public virtual void OnTheFormPageAFormShouldBeVisibleWithOneInputBoxAndOneSubmitButton()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On the Form page, a form should be visible with one input box and one submit butt" +
                    "on", null, new string[] {
                        "REQ-UI-11"});
#line 67
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 68
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
 testRunner.When("I open \"Form\" site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.Then("A form is visible with one input field and a submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void OpenTheFormPageAndSubmitANameFromTheGivenList(string name, string message, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "REQ-UI-12"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Open the form page and submit a name from the given list", null, @__tags);
#line 73
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 74
 testRunner.Given("Docler webpage is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 75
 testRunner.When("I open \"Form\" site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
 testRunner.And(string.Format("I enter \"{0}\" and click on the submit button", name), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.Then("The \"Hello\" page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 78
 testRunner.And(string.Format("\"{0}\" text visible in \"H1\" tag", message), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("The title should be: UI Testing Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("Company logo is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open the form page and submit a name from the given list, John", new string[] {
                "REQ-UI-12"}, SourceLine=83)]
        public virtual void OpenTheFormPageAndSubmitANameFromTheGivenList_John()
        {
#line 73
this.OpenTheFormPageAndSubmitANameFromTheGivenList("John", "Hello John!", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open the form page and submit a name from the given list, Sophia", new string[] {
                "REQ-UI-12"}, SourceLine=83)]
        public virtual void OpenTheFormPageAndSubmitANameFromTheGivenList_Sophia()
        {
#line 73
this.OpenTheFormPageAndSubmitANameFromTheGivenList("Sophia", "Hello Sophia!", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open the form page and submit a name from the given list, Charlie", new string[] {
                "REQ-UI-12"}, SourceLine=83)]
        public virtual void OpenTheFormPageAndSubmitANameFromTheGivenList_Charlie()
        {
#line 73
this.OpenTheFormPageAndSubmitANameFromTheGivenList("Charlie", "Hello Charlie!", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Open the form page and submit a name from the given list, Emily", new string[] {
                "REQ-UI-12"}, SourceLine=83)]
        public virtual void OpenTheFormPageAndSubmitANameFromTheGivenList_Emily()
        {
#line 73
this.OpenTheFormPageAndSubmitANameFromTheGivenList("Emily", "Hello Emily!", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
